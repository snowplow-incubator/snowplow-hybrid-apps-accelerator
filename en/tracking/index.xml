<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tracking on Documentation for Hugo Learn Theme</title>
    <link>/en/tracking/</link>
    <description>Recent content in Tracking on Documentation for Hugo Learn Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="/en/tracking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting Started</title>
      <link>/en/tracking/tracking_1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/tracking/tracking_1/</guid>
      <description>Step 1: Download sp.js Add the sp.js file to your project directory. The latest version can be found here.
Step 2: Add JS snippet Add the below snippet to all of the pages you would like to track. Make sure to update the link to the sp.js file
Typically this will be placed into the &amp;lt;head&amp;gt; element of your page or in a similar, suitable, location if using a Single Page Application framework.</description>
    </item>
    
    <item>
      <title>Tracking Events</title>
      <link>/en/tracking/tracking_2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/tracking/tracking_2/</guid>
      <description>The trackers create data on user actions at a specific point in time. For example:
Loading a web page Clicking a link Submitting a form A number of tracking events are available out of the box. These include, but aren&amp;rsquo;t limited to:
Page views Heartbeats (Page Pings) Link clicks HTML form actions In this section, we will implement all 4 of these built-in events.
Step 1: Enable Activity Tracking First we will enable activity tracking to collect &amp;lsquo;page ping&amp;rsquo; events.</description>
    </item>
    
    <item>
      <title>Adding Context</title>
      <link>/en/tracking/tracking_3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/tracking/tracking_3/</guid>
      <description>Whilst the tracking set up provides event data on user actions at a specific point in time, context describes the setting in which an event takes place. To describe the context of an event, we need to define and capture individual entities. For example:
The user performing an action The web page the action occured on A product that has been interacted with Together, these entities make up the context of an event.</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>/en/tracking/tracking_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/tracking/tracking_4/</guid>
      <description>Test using Snowplow Mini or Micro??
The Snowplow Chrome Extension can be used to ensure the event was emitted correctly but the browser extension does not check that the event was processed correctly.
To get the full picture, tracking must be QAâ€™d using the Snowplow Mini, not just by simply checking in the browser.
Note: both events and context entities must be tested thoroughly - if a context entity that is appended to an event fails validation, the whole event will fail validation.</description>
    </item>
    
  </channel>
</rss>
